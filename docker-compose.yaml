version: '3.8'

services:
  php:
    container_name: ${CONTAINER_PREFIX}_php
    build:
      context: ./config/php/fpm
      dockerfile: Dockerfile
      args:
        PROJECT_NAME: ${PROJECT_NAME}
        GITHUB_USER: ${GITHUB_USER}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        GITHUB_EMAIL: ${GITHUB_EMAIL}
        GITHUB_NAME: ${GITHUB_NAME}
    restart: on-failure
    networks:
      - local-network
    volumes:
      - ./config/php/fpm/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./config/php/fpm/bashrc_config.txt:/usr/local/share/bashrc_config.txt
      - ./app:/var/www/${PROJECT_NAME}
    environment:
      - PHP_IDE_CONFIG=serverName=${PROJECT_NAME}
      - TIMEZONE=${TIMEZONE}
      - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST}

  nginx:
    container_name: ${CONTAINER_PREFIX}_nginx
    image: nginx:1.21.4-alpine
    networks:
      - local-network
    restart: on-failure
    env_file:
      - .env
    command: /bin/sh -c "
      envsubst '$$PROJECT_NAME' < /etc/nginx/conf.d/default.nginx.template > /etc/nginx/conf.d/$PROJECT_NAME.nginx.conf
      && exec nginx -g 'daemon off;'"
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./config/ssl:/etc/ssl
      - ./app:/var/www/${PROJECT_NAME}
    ports:
      - 80:80
      - 443:443

  mysql:
    container_name: ${CONTAINER_PREFIX}_mysql
    image: mysql:8.0.27
    networks:
      - local-network
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./config/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - mysql-data:/var/lib/mysql
    ports:
      - 3306:3306

  redis:
    container_name: ${CONTAINER_PREFIX}_redis
    networks:
      - local-network
    image: redis:6.2.6-alpine
    restart: on-failure
    volumes:
      - redis-data:/data

#  swagger:
#    container_name: ${CONTAINER_PREFIX}_swagger
#    image: swaggerapi/swagger-ui:v4.1.3
#    networks:
#      - local-network
#    restart: on-failure
#    ports:
#      - 7000:8080
#    volumes:
#      - ./app/src/api.yaml:/docs/api.yaml
#      - ./scripts/cp_swagger.sh:/usr/local/bin/cp_swagger.sh
#      - ./scripts/set_server.sh:/usr/local/bin/set_server.sh
#    command: /bin/sh -c "
#      ./usr/local/bin/cp_swagger.sh
#      && ./usr/local/bin/set_server.sh
#      && /usr/share/nginx/run.sh"
#    environment:
#      SERVER_URL: https://${PROJECT_NAME}.docker.loc
#      SWAGGER_NAME: api.yaml
#      API_URL: api-docker.yaml
#      SWAGGER_JSON: /docs/api-docker.yaml

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local

networks:
  local-network:
    driver: bridge
