version: '3.8'

services:
    php:
        restart: always
        container_name: ${CONTAINER_PREFIX}_php
        build:
            context: ./config/php/fpm
            args:
                PROJECT_NAME: ${PROJECT_NAME}
                GITHUB_USER: ${GITHUB_USER}
                GITHUB_TOKEN: ${GITHUB_TOKEN}
                GITHUB_EMAIL: ${GITHUB_EMAIL}
                GITHUB_NAME: ${GITHUB_NAME}
        expose:
            - '9000'
        volumes:
            - ./config/php/fpm/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ./config/php/fpm/bashrc_config.txt:/usr/local/share/bashrc_config.txt
            - ./app:/var/www/${PROJECT_NAME}
        environment:
            - PHP_IDE_CONFIG=serverName=${PROJECT_NAME}
            - TIMEZONE=${TIMEZONE}
            - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST}
        networks:
            - default

    nginx:
        restart: always
        container_name: ${CONTAINER_PREFIX}_nginx
        image: nginx:1.21.5-alpine
        env_file:
            - .env
        command: /bin/sh -c "
            envsubst '$$PROJECT_NAME' < /etc/nginx/conf.d/default.nginx.template > /etc/nginx/conf.d/$PROJECT_NAME.nginx.conf
            && exec nginx -g 'daemon off;'"
        volumes:
            - ./config/nginx:/etc/nginx/conf.d
            - ./config/ssl:/etc/ssl
            - ./app:/var/www/${PROJECT_NAME}
        ports:
            - '${NGINX_SSL_PORT}:443'
        networks:
            - default

    mysql:
        restart: always
        container_name: ${CONTAINER_PREFIX}_mysql
        image: mysql:8.0.28
        env_file:
            - .env
        volumes:
            - ./config/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
            - ./services/mysql/data:/var/lib/mysql
        ports:
            - '${MYSQL_PORT}:3306'
        networks:
            - default

    redis:
        restart: always
        container_name: ${CONTAINER_PREFIX}_redis
        image: redis:6.2.6-alpine
        expose:
            - '6379'
        volumes:
            - ./app:/var/www/${PROJECT_NAME}
            - ./services/redis/data:/data
            - ./services/redis/config/redis.conf:/usr/local/etc/redis/redis.conf
        command: redis-server /usr/local/etc/redis/redis.conf
        networks:
            - default

#    swagger:
#        restart: always
#        container_name: ${CONTAINER_PREFIX}_swagger
#        image: swaggerapi/swagger-ui:v4.2.1
#        ports:
#            - ${SWAGGER_PORT}:8080
#        volumes:
#            - ./app/src/api.yaml:/docs/api.yaml
#            - ./scripts/cp_swagger.sh:/usr/local/bin/cp_swagger.sh
#            - ./scripts/set_server.sh:/usr/local/bin/set_server.sh
#        command: /bin/sh -c "
#            ./usr/local/bin/cp_swagger.sh
#            && ./usr/local/bin/set_server.sh
#            && /usr/share/nginx/run.sh"
#        environment:
#            SERVER_URL: https://${PROJECT_NAME}.docker.loc:${NGINX_SSL_PORT}
#            SWAGGER_NAME: api.yaml
#            API_URL: api-docker.yaml
#            SWAGGER_JSON: /docs/api-docker.yaml
#        networks:
#            - default

networks:
    default:
        external: true
        name: ${PROJECT_NAME}
